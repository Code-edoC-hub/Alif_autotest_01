{"name": "get_session_id", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'", "trace": "@allure.parent_suite('Main')\n    @allure.suite('Checking')\n    @allure.title('get_session_id')\n    def test_get_session_id():\n        global cookie\n        with allure.step('Sending a request to get the cart'):\n            response = get_cart()\n            # allure.attach(response.request.method, name='Request Method', attachment_type=allure.attachment_type.TEXT)\n            request = response.request\n    \n            allure.attach(request.method, name='Request Method', attachment_type=allure.attachment_type.TEXT)\n            allure.attach(request.url, name='Request URL', attachment_type=allure.attachment_type.TEXT)\n>           allure.attach(request.body, name='Request Body', attachment_type=allure.attachment_type.JSON)\n\ntest\\main.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\allure_commons\\_allure.py:210: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n.venv\\Lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\allure_pytest\\listener.py:254: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n.venv\\Lib\\site-packages\\allure_commons\\reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n.venv\\Lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x000002342D0EDFD0>, body = None, file_name = '782b6098-6653-42e2-9fc3-c2fb788fbec2-attachment.json'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = self._report_dir / file_name\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, str):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'NoneType'\n\n.venv\\Lib\\site-packages\\allure_commons\\logger.py:48: TypeError"}, "steps": [{"name": "Sending a request to get the cart", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'\n", "trace": "  File \"C:\\Users\\art\\PyCharmMiscProject\\test\\main.py\", line 41, in test_get_session_id\n    allure.attach(request.body, name='Request Body', attachment_type=allure.attachment_type.JSON)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 210, in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_hooks.py\", line 512, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    raise exception\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\allure_pytest\\listener.py\", line 254, in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\allure_commons\\reporter.py\", line 165, in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_hooks.py\", line 512, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    raise exception\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\art\\PyCharmMiscProject\\.venv\\Lib\\site-packages\\allure_commons\\logger.py\", line 48, in report_attached_data\n    attached_file.write(body)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^\n"}, "attachments": [{"name": "Request Method", "source": "05c5dde5-36c9-4466-899a-7f321b552c09-attachment.txt", "type": "text/plain"}, {"name": "Request URL", "source": "98fdb523-441b-4d82-9701-819a949293ba-attachment.txt", "type": "text/plain"}, {"name": "Request Body", "source": "782b6098-6653-42e2-9fc3-c2fb788fbec2-attachment.json", "type": "application/json"}], "start": 1758716922943, "stop": 1758716923128}], "start": 1758716922943, "stop": 1758716923131, "uuid": "498e0b64-b601-4be3-aa51-675e70b6df43", "historyId": "a6d7a2775789951dc05bcbabd47fec78", "testCaseId": "a6d7a2775789951dc05bcbabd47fec78", "fullName": "test.main#test_get_session_id", "labels": [{"name": "parentSuite", "value": "Main"}, {"name": "suite", "value": "Checking"}, {"name": "host", "value": "asusX1502va"}, {"name": "thread", "value": "13480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.main"}], "titlePath": ["test", "main.py"]}